<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lampze's blog</title><link>https://lampze.github.io/blog/</link><description>This is a blog for me</description><atom:link href="https://lampze.github.io/blog/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>zh_cn</language><copyright>Contents © 2019 &lt;a href="mailto:1229408499@qq.com"&gt;lampze&lt;/a&gt; </copyright><lastBuildDate>Sun, 06 Jan 2019 13:01:57 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>[翻译] 9999999999999999.0 - 9999999999999998.0</title><link>https://lampze.github.io/blog/posts/99999999999999990-99999999999999980/</link><dc:creator>lampze</dc:creator><description>&lt;div id="outline-container-org82ee11b" class="outline-2"&gt;
&lt;h2 id="org82ee11b"&gt;前言&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org82ee11b"&gt;
&lt;p&gt;
原文链接：&lt;a href="http://geocar.sdf1.org/numbers.html"&gt;点击跳转&lt;/a&gt;&lt;br&gt;
发现方式：&lt;a href="https://news.ycombinator.com"&gt;Hacker News&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgce96d2d" class="outline-2"&gt;
&lt;h2 id="orgce96d2d"&gt;正文&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgce96d2d"&gt;
&lt;p&gt;
&lt;b&gt;一个简单的问题：&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;
9999999999999999.0 - 9999999999999998.0&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
您最喜欢的语言能给出正确的答案吗？&lt;br&gt;
&lt;/p&gt;

&lt;style&gt;
table[Attributes Style] {
    border-top-width: 0px;
    border-right-width: 0px;
    border-bottom-width: 0px;
    border-left-width: 0px;
    -webkit-border-horizontal-spacing: 8px;
    -webkit-border-vertical-spacing: 8px;
}
table {
    display: table;
    border-collapse: separate;
    border-spacing: 2px;
    border-color: grey;
}
tbody {
    display: table-row-group;
    vertical-align: middle;
    border-color: inherit;
}
tr {
    display: table-row;
    vertical-align: inherit;
    border-color: inherit;
}
th {
    text-align: right;
    vertical-align: top;
    font-weight: bold;
}
td {
    font-family: monospace;
}
td, th {
    display: table-cell;
    vertical-align: inherit;
    border: none;
}
td span, .w {
    color: red;
    font-weight: bold;
}
&lt;/style&gt;
&lt;table border="0" cellspacing="8"&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;th&gt;Ruby:&lt;/th&gt;&lt;td&gt;irb(main):001:0&amp;gt; 9999999999999999.0 - 9999999999999998.0&lt;br&gt;&lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Java:&lt;/th&gt;&lt;td&gt;public class Foo{public static void main(String args[]){System.out.println(9999999999999999.0-9999999999999998.0);}}&lt;br&gt;&lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Python:&lt;/th&gt;&lt;td&gt;&amp;gt;&amp;gt;&amp;gt; 9999999999999999.0 - 9999999999999998.0&lt;br&gt;&lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Rebol:&lt;/th&gt;&lt;td&gt;&amp;gt;&amp;gt; 9999999999999999.0 - 9999999999999998.0&lt;br&gt;== &lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Haskell:&lt;/th&gt;&lt;td&gt;Prelude&amp;gt; 9999999999999999.0 - 9999999999999998.0&lt;br&gt;&lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;TCL:&lt;/th&gt;&lt;td&gt;% expr "9999999999999999.0-9999999999999998.0"&lt;br&gt;&lt;span&gt;0.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Emacs Lisp:&lt;/th&gt;&lt;td&gt;ELISP&amp;gt; (- 9999999999999999.0 9999999999999998.0)&lt;br&gt;&lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Common–Lisp:&lt;/th&gt;&lt;td&gt;[1]&amp;gt; (- 9999999999999999.0 9999999999999998.0)&lt;br&gt;&lt;span&gt;0.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Maxima:&lt;/th&gt;&lt;td&gt;(%i1) 9999999999999999.0-9999999999999998.0;&lt;br&gt;(%o1)                                &lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Google:&lt;/th&gt;&lt;td&gt;&lt;a class="w" rel="nofollow,noindex" target="_new" href="http://www.google.com/search?q=9999999999999999.0-9999999999999998.0"&gt;&lt;span&gt;0&lt;/span&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;K/Q:&lt;/th&gt;&lt;td&gt;q)9999999999999999.0-9999999999999998.0&lt;br&gt;&lt;span&gt;2f&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;R:&lt;/th&gt;&lt;td&gt;&amp;gt; 9999999999999999.0-9999999999999998.0&lt;br&gt;[1] &lt;span&gt;2&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Erlang:&lt;/th&gt;&lt;td&gt;1&amp;gt; 9999999999999999.0-9999999999999998.0 .&lt;br&gt;&lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;C:&lt;/th&gt;&lt;td&gt;main(){printf("%lf\n",(double)9999999999999999.0-9999999999999998.0);}&lt;br&gt;&lt;span&gt;2.000000&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;AWK:&lt;/th&gt;&lt;td&gt;$ awk 'END{print 9999999999999999.0-9999999999999998.0}'&amp;lt;/dev/null&lt;br&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;GoLang:&lt;/th&gt;&lt;td&gt;var a = 9999999999999999.0; var b = 9999999999999998.0; fmt.Printf("%f\n", a-b)&lt;br&gt;&lt;span&gt;2.000000&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Perl:&lt;/th&gt;&lt;td&gt;$ perl -e 'print 9999999999999999.0-9999999999999998.0;print "\n";'&lt;br&gt;&lt;span&gt;2.0&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Perl6:&lt;/th&gt;&lt;td&gt;$ perl6 -e 'print 9999999999999999.0-9999999999999998.0;print "\n";'&lt;br&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th&gt;Wolfram:&lt;/th&gt;&lt;td&gt;&lt;a class="w" rel="nofollow,noindex" target="_new" href="https://www.wolframalpha.com/input/?i=9999999999999999.0-9999999999999998.0"&gt;&lt;b&gt;1&lt;/b&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;
一些结果让我感到惊讶。他们让你感到大吃一惊吗？&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
请注意，可以使用特殊的方法修复一些错误的答案。例如，Common-Lisp给出了解决方案：&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(let ((*read-default-float-format* 'long-float))
  (- (read-from-string "9999999999999999.0") (read-from-string "9999999999999998.0")))
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Perl得到正确答案的方案：&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;perl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nn"&gt;mMath::&lt;/span&gt;&lt;span class="n"&gt;BigFloat&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="s"&gt;'print Math::BigFloat-&amp;gt;new("9999999999999999.0")&lt;/span&gt;
&lt;span class="s"&gt; - Math::BigFloat-&amp;gt;new("9999999999999998.0");print "\n";'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
使用这些方案需要有某种先见之明，因此不会在上面的表中考虑。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
我知道 &lt;code&gt;GoLang&lt;/code&gt; 可以用下面的方法得到正确的答案：&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fmt.Printf("%f\n", 9999999999999999.0-9999999999999998.0)
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
但是如果值是不可读的(不知道这句翻译的对不对)， &lt;code&gt;go&lt;/code&gt; 就会对常量表达式使用任意精度，这对我来说是危险的。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
如果我没有列出您最喜欢的语言，或者您认为我用错误的方式减去两个数，请告诉我：&lt;a href="mailto:geocar@sdf.lonestar.org"&gt;geocar@sdf.lonestar.org&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga319992" class="outline-2"&gt;
&lt;h2 id="orga319992"&gt;博主的话&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga319992"&gt;
&lt;p&gt;
在翻译过程中深刻的体会到了我英语有多菜，这么短的文章居然花了我1个小时。&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;
因为这篇文章只列举了结果，没有解释为什么，所以我又去查了一下。&lt;br&gt;
这篇文章解释了原因：&lt;a href="http://www.ruanyifeng.com/blog/2010/06/ieee_floating-point_representation.html"&gt;浮点数的二进制表示&lt;/a&gt;&lt;br&gt;
好奇的话可以看一下。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://lampze.github.io/blog/posts/99999999999999990-99999999999999980/</guid><pubDate>Sun, 06 Jan 2019 11:50:51 GMT</pubDate></item><item><title>翻译计划</title><link>https://lampze.github.io/blog/posts/translation-plan/</link><dc:creator>lampze</dc:creator><description>&lt;div id="outline-container-org32086f8" class="outline-2"&gt;
&lt;h2 id="org32086f8"&gt;规划&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org32086f8"&gt;
&lt;p&gt;
开了博客后才发现，自己太菜了，没有什么好写的，于是我决定开启这个翻译计划。&lt;br&gt;
我将尽量每天翻译一篇英文文章，正好强迫自己学习英语并获取技术上的最新动态。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgdf20605" class="outline-2"&gt;
&lt;h2 id="orgdf20605"&gt;格式&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgdf20605"&gt;
&lt;p&gt;
文章将以 &lt;code&gt;[翻译]&lt;/code&gt; 开头，并在文章开头注明原文链接。&lt;br&gt;
如果我有什么地方翻译错了或翻译的不好，请给我发email: &lt;a href="mailto:1229408499@qq.com"&gt;1229408499@qq.com&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://lampze.github.io/blog/posts/translation-plan/</guid><pubDate>Sun, 06 Jan 2019 07:54:43 GMT</pubDate></item><item><title>在Linux上用两步安装TIM</title><link>https://lampze.github.io/blog/posts/install-tim-in-linux/</link><dc:creator>lampze</dc:creator><description>&lt;div&gt;&lt;div id="outline-container-org135e19e" class="outline-2"&gt;
&lt;h2 id="org135e19e"&gt;两行命令&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org135e19e"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget http://yun.tzmm.com.cn/index.php/s/5hJNzt2VR9aIEF2/download TIM.AppImage
chmod +x TIM.AppImage &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./TIM.AppImage
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgaebe4af" class="outline-2"&gt;
&lt;h2 id="orgaebe4af"&gt;介绍&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgaebe4af"&gt;
&lt;p&gt;
项目地址：&lt;a href="https://github.com/askme765cs/Wine-QQ-TIM"&gt;Wine-QQ-TIM&lt;/a&gt;&lt;br&gt;
作者把 &lt;code&gt;QQ&lt;/code&gt; 和 &lt;code&gt;TIM&lt;/code&gt; 用&lt;a href="https://github.com/AppImage/AppImageKit"&gt;AppImageKit&lt;/a&gt;打包了，现在只需要下载打好的包，就能体验完整的 &lt;code&gt;QQ&lt;/code&gt; 和 &lt;code&gt;TIM&lt;/code&gt; 了。&lt;br&gt;
跟以前自己安装 &lt;code&gt;wine&lt;/code&gt; 比起来，真是省心太多了。&lt;br&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://lampze.github.io/blog/posts/install-tim-in-linux/"&gt;阅读更多…&lt;/a&gt; (剩余 1 分钟去阅读)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://lampze.github.io/blog/posts/install-tim-in-linux/</guid><pubDate>Wed, 26 Dec 2018 05:40:50 GMT</pubDate></item><item><title>gentoo上安装最新版的pandoc</title><link>https://lampze.github.io/blog/posts/gentoo-install-pandoc/</link><dc:creator>lampze</dc:creator><description>&lt;div&gt;&lt;div id="outline-container-orgeea4462" class="outline-2"&gt;
&lt;h2 id="orgeea4462"&gt;起因&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgeea4462"&gt;
&lt;p&gt;
&lt;code&gt;emacs&lt;/code&gt; 的 &lt;code&gt;org-mode&lt;/code&gt; 需要 &lt;code&gt;pandoc&lt;/code&gt; 才能导出成html格式。而且 &lt;code&gt;pandoc&lt;/code&gt; 版本太低，开启 &lt;code&gt;emacs&lt;/code&gt; 时会报错，这就不能忍了。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgabcbbe7" class="outline-2"&gt;
&lt;h2 id="orgabcbbe7"&gt;安装&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgabcbbe7"&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org15bb055"&gt;&lt;/a&gt;由于官方的 &lt;code&gt;pandoc&lt;/code&gt; 版本太低，所以我们要加入 &lt;code&gt;haskell overlay&lt;/code&gt;&lt;br&gt;
&lt;div class="outline-text-5" id="text-org15bb055"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;layman -a haskell
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a id="org8607f2d"&gt;&lt;/a&gt;(可选) 开启 &lt;code&gt;haskell overlay&lt;/code&gt; 的自动更新&lt;br&gt;
&lt;div class="outline-text-5" id="text-org8607f2d"&gt;
&lt;p&gt;
打开 &lt;code&gt;/etc/portage/repos.conf/layman.conf&lt;/code&gt; 修改 &lt;code&gt;haskell&lt;/code&gt; 字段为&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[haskell]
priority = 50
location = /var/lib/layman/haskell
layman-type = git
auto-sync = Yes
sync-type = git
sync-uri = https://github.com/gentoo-haskell/gentoo-haskell.git
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="org953fe5a"&gt;&lt;/a&gt;打开 &lt;code&gt;/etc/portage/package.accept_keywords&lt;/code&gt; (如果是目录，就在这个目录下新建一个文件，名字无所谓) 加上&lt;br&gt;
&lt;div class="outline-text-5" id="text-org953fe5a"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;*/*::haskell ~amd64 &lt;span class="c1"&gt;#开启 haskell overlay 全部软件包的测试版&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;&lt;a id="orgb3fbfd2"&gt;&lt;/a&gt;接下来只需要安装pandoc就行了&lt;br&gt;
&lt;div class="outline-text-5" id="text-orgb3fbfd2"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;emerge -av pandoc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://lampze.github.io/blog/posts/gentoo-install-pandoc/"&gt;阅读更多…&lt;/a&gt; (剩余 1 分钟去阅读)&lt;/p&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://lampze.github.io/blog/posts/gentoo-install-pandoc/</guid><pubDate>Fri, 09 Nov 2018 12:40:42 GMT</pubDate></item><item><title>解决NetworkManager不能开机自连wifi</title><link>https://lampze.github.io/blog/posts/networkmanager-cant-auto-connect-wifi/</link><dc:creator>lampze</dc:creator><description>&lt;div id="outline-container-org87f94a7" class="outline-2"&gt;
&lt;h2 id="org87f94a7"&gt;通用解决方法&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org87f94a7"&gt;
&lt;p&gt;
用root用户打开 &lt;code&gt;/etc/NetworkManager/system-connections/&lt;/code&gt; 目录下的wifi名称文件。&lt;br&gt;
找到 &lt;code&gt;permissions&lt;/code&gt; 所在行，删除 &lt;code&gt;=&lt;/code&gt; 后面的所有内容，保存退出就行了。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd001269" class="outline-2"&gt;
&lt;h2 id="orgd001269"&gt;plasma-nm用户&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd001269"&gt;
&lt;p&gt;
在wifi设置里的 &lt;code&gt;常规配置&lt;/code&gt; 下，选中 &lt;code&gt;所有用户可以连接到此网络&lt;/code&gt; 就行了。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org9eee17e" class="outline-2"&gt;
&lt;h2 id="org9eee17e"&gt;原因猜想&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9eee17e"&gt;
&lt;p&gt;
应该是因为wifi设置为只能指定用户连接，所以开机时没有自动连接。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://lampze.github.io/blog/posts/networkmanager-cant-auto-connect-wifi/</guid><pubDate>Thu, 01 Nov 2018 01:11:36 GMT</pubDate></item><item><title>org-mode测试</title><link>https://lampze.github.io/blog/posts/org-mode-test/</link><dc:creator>lampze</dc:creator><description>&lt;div&gt;&lt;div id="outline-container-org9b437ec" class="outline-2"&gt;
&lt;h2 id="org9b437ec"&gt;一级标题&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9b437ec"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgd03b31c" class="outline-3"&gt;
&lt;h3 id="orgd03b31c"&gt;二级标题&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgd03b31c"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org694b60f" class="outline-4"&gt;
&lt;h4 id="org694b60f"&gt;三级标题&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-org694b60f"&gt;
&lt;/div&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org3aa8d2a"&gt;&lt;/a&gt;四级标题&lt;br&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="orgf3dea46"&gt;&lt;/a&gt;五级标题&lt;br&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="orgdc98fed"&gt;&lt;/a&gt;六级标题&lt;br&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="orgb435a83"&gt;&lt;/a&gt;七级标题&lt;br&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a id="org93f5926"&gt;&lt;/a&gt;八级标题&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgfb6115e" class="outline-2"&gt;
&lt;h2 id="orgfb6115e"&gt;列表&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgfb6115e"&gt;
&lt;p&gt;&lt;a href="https://lampze.github.io/blog/posts/org-mode-test/"&gt;阅读更多…&lt;/a&gt; (剩余 1 分钟去阅读)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://lampze.github.io/blog/posts/org-mode-test/</guid><pubDate>Thu, 01 Nov 2018 00:58:35 GMT</pubDate></item><item><title>My first blog</title><link>https://lampze.github.io/blog/posts/my-first-blog/</link><dc:creator>lampze</dc:creator><description>&lt;div id="outline-container-orgcb4647d" class="outline-2"&gt;
&lt;h2 id="orgcb4647d"&gt;起因&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcb4647d"&gt;
&lt;p&gt;
学了这么久的前端，连个自己的博客都没有，实在是说不过去。&lt;br&gt;
而且在很久以前就想写博客了，现在又上了大学，于是…&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga83e8fc" class="outline-2"&gt;
&lt;h2 id="orga83e8fc"&gt;组成&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga83e8fc"&gt;
&lt;p&gt;
这个blog是用 &lt;code&gt;nikola&lt;/code&gt; 生成的，为什么不用 &lt;code&gt;Hexo&lt;/code&gt; 之类的框架呢？&lt;br&gt;
主要是我想要用 &lt;code&gt;org-mode&lt;/code&gt; 写blog，而 &lt;code&gt;nikola&lt;/code&gt; 原生支持 &lt;code&gt;org-mode&lt;/code&gt; 。&lt;br&gt;
而且我觉得用 &lt;code&gt;Hexo&lt;/code&gt; 的人太多了，大部分人的blog都长的一样，这样太尴尬了。&lt;br&gt;
最重要的是，我是一个喜欢折腾的人。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org4293505" class="outline-2"&gt;
&lt;h2 id="org4293505"&gt;内容&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org4293505"&gt;
&lt;p&gt;
主要发一些我折腾的东西，正好还可以当个备忘录。&lt;br&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><guid>https://lampze.github.io/blog/posts/my-first-blog/</guid><pubDate>Thu, 01 Nov 2018 00:57:10 GMT</pubDate></item></channel></rss>